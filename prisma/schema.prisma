// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Role {
  id        Int      @id @default(autoincrement())
  role_name String   @db.VarChar(255)
  users     User[]
}

model User {
  id            Int      @id @default(autoincrement())
  supabaseUserId String   @db.VarChar(255)
  roleId        Int
  nickname      String
  role          Role     @relation(fields: [roleId], references: [id])
  profile       Profile?
  learningRecords LearningRecord[]
  followers      Follower[] @relation("follower")
  followedBy     Follower[] @relation("followed")
}

model Profile {
  id             Int      @id @default(autoincrement())
  userId         Int     @unique
  first_name     String
  last_name      String
  date_of_birth  DateTime
  gender         String
  profile_picture String
  bio            String
  phoneNumber    String
  socialLinks    String
  user           User     @relation(fields: [userId], references: [id])
}

model LearningRecord {
  id          Int       @id @default(autoincrement())
  userId      Int
  categoryId  Int
  title       String
  content     String
  start_time  DateTime
  end_time    DateTime
  duration    Float
  learning_date DateTime
  user        User      @relation(fields: [userId], references: [id])
  category    Category  @relation(fields: [categoryId], references: [id])
  learningRecordCategories LearningRecordCategory[]
}

model LearningRecordCategory {
  id             Int       @id @default(autoincrement())
  learningRecordId Int
  categoryId     Int
  learningRecord LearningRecord @relation(fields: [learningRecordId], references: [id])
  category       Category   @relation(fields: [categoryId], references: [id])
}

model Category {
  id               Int        @id @default(autoincrement())
  category_name    String
  learningRecords  LearningRecord[]
  learningRecordCategories LearningRecordCategory[]
}

model Follower {
  id             Int       @id @default(autoincrement())
  followerId     Int
  followedId     Int
  follower       User      @relation("follower", fields: [followerId], references: [id])
  followed       User      @relation("followed", fields: [followedId], references: [id])
}
